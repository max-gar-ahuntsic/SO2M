// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SO2M.Data;

#nullable disable

namespace SO2M.Migrations
{
    [DbContext(typeof(So2msContext))]
    partial class So2msContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SO2M.Models.CritereRecherche", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgeMax")
                        .HasColumnType("int");

                    b.Property<int?>("AgeMin")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiveauAcademique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrientationS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RayonRecherche")
                        .HasColumnType("int");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CritereRecherches");
                });

            modelBuilder.Entity("SO2M.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnvoye")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinataireId")
                        .HasColumnType("int");

                    b.Property<int>("ExpediteurId")
                        .HasColumnType("int");

                    b.Property<bool>("Lu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SO2M.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateAjout")
                        .HasColumnType("date");

                    b.Property<bool?>("PhotoProfil")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("SO2M.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Courriel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CritereRechercheId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DateCreationProfil")
                        .HasColumnType("date");

                    b.Property<bool?>("EstActive")
                        .HasColumnType("bit");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Modele1Axe1")
                        .HasColumnType("int");

                    b.Property<int?>("Modele1Axe2")
                        .HasColumnType("int");

                    b.Property<int?>("Modele1Axe3")
                        .HasColumnType("int");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiveauAcademique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrientationS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Utilisateur1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CritereRechercheId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("SO2M.Models.Photo", b =>
                {
                    b.HasOne("SO2M.Models.Utilisateur", "Utilisateur")
                        .WithMany("PhotosNavigation")
                        .HasForeignKey("UtilisateurId");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("SO2M.Models.Utilisateur", b =>
                {
                    b.HasOne("SO2M.Models.CritereRecherche", "CritereRecherche")
                        .WithMany()
                        .HasForeignKey("CritereRechercheId");

                    b.Navigation("CritereRecherche");
                });

            modelBuilder.Entity("SO2M.Models.Utilisateur", b =>
                {
                    b.Navigation("PhotosNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
